-- NYU:Poly CS6133 Computer Architecture
-- Instructor: Vikram Padman
--
-- Instruction Memory Initialization File
--
-- Instrucion Format:
--
-- R-Type: <6-bit Opcode>,<5-bit rs>,<5-bit rt>,<5-bit rd>,<5-bit shamt>,<6-bit funct>
--    bits   (31-26)       (25-21)     (20-16)    (15-11)     (10-6)       (5-0)
--
-- I-Type: <6-bit Opcode>,<5-bit rs>,<5-bit rt>,<16-bit Address> 
--   bits     (31-26)      (25-21)   (20-16)     (15-0)
--
--
-- This example demos for addi and nop instruction
--
-- addi instruction format:
-- I-Type: <6-bit Opcode>, <5-bit rs>, <5-bit rd>,<16-bit idata>
--   bits     (31-26)      (25-21)   (20-16)     (15-0)
-- Opcode = 100000, rd = rs + idata
--
-- nop instruction format:
-- R-Type: <6-bit Opcode>,<5-bit XX>,<5-bit XX>,<5-bit XX>,<5-bit shamt>,<6-bit funct>
--    bits   (31-26)       (25-21)     (20-16)    (15-11)     (10-6)       (5-0)
-- Opcode = 000000, funct = 000000


--File format:
-- Hex Address 3 hex nibbles (12 bits) : bit31 ...... bit0;

WIDTH=32;
DEPTH=1024;

ADDRESS_RADIX=HEX;
DATA_RADIX=BIN;

CONTENT BEGIN
--Hex Address :   bit31...........bit15..........bit0;
--   |             |               |              |
    001       :    00010000001001010000000000001010;
--                 |____||___||___||______________|
--                   |     |    |          |
--                  beq, rs=1, rt=5,   offset=10 (0xA)
-- This is a beq, branch if equal instruction
-- branch to PC+40 if rs==rt => r1==r5
END;
